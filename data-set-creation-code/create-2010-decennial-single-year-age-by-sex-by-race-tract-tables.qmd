---
output: html_document
editor_options: 
  chunk_output_type: console
---

# activate required packages
```{r}
library(censusapi)
library(DBI)
library(odbc)
library(tigris) 
library(tidyverse)
library(tidyr)
library(dplyr) 
library(sf)
library(data.table)
library(keyring)
```

# connect to inter-census and inter-spatial SQL Server databases, add reference tables
```{r}
con_inter_spatial <- dbConnect(odbc::odbc(),
                               Driver   = "SQL Server",
                               Server   = key_get("ccdph_sql_server"),
                               Database = "inter-spatial")

tracts_2010_cook_county <- dbReadTable(conn = con_inter_spatial,
            Id(schema = "ref", table = "tracts_2010_cook_county")) %>%
  select(geoid_tract_2010, name_district, location)

con_inter_census <- dbConnect(odbc::odbc(),
                               Driver   = "SQL Server",
                               Server   = key_get("ccdph_sql_server"),
                               Database = "inter-census")

census_standard_age_groups <-  dbReadTable(conn = con_inter_census, 
               Id(schema="ref", 
                  table="standard-age-groups"))

```

# review 2010 decennial census APIs, groups and variables
```{r}
# return all census 2010 APIs
allCensusApis_df <- listCensusApis() %>% filter(vintage=="2010")

# return all groups in census 2020 demographic and housing counts
groups_census_2010_sf1 <- listCensusMetadata(
  name = "dec/sf1",
  vintage = 2010,
  type = "groups",
  group = NULL,
  variable_name = NULL,
  include_values = FALSE
)

# select all PCT12 (age, sex, race) groups
groups_age_sex_race <- groups_census_2010_sf1 %>%
  select(name, description) %>%
  filter(str_detect(name, "PCT12")) %>%
  distinct() %>%
  arrange(name)

# return all variables in census 2020 demographic and housing counts
variables_census_2010_sf1 <- listCensusMetadata(
  name = "dec/sf1",
  vintage = 2010,
  type = "variables",
  group = NULL,
  variable_name = NULL,
  include_values = FALSE
)

```

# create 2010 decennial tracts by single-year age, sex for Cook County
```{r}
# select all PCT12 (age, sex) variables
variables_age_sex_race <- variables_census_2010_sf1 %>%
  select(name, label) %>%
  filter(str_detect(name, "PCT012")) %>%
  distinct() %>%
  arrange(name)

variables_age_groups <- variables_age_sex_race %>%
  filter(str_detect(name, "PCT012A")) %>%
  mutate(col_number = as.integer(substr(name,8,10)),
         label = str_replace_all(label, " !!Total!!Male",""),
         label = str_replace_all(label, "Total!!Male!!",""),
         label = str_replace_all(label, "Total!!Female!!",""),
         label = str_replace_all(label, "!!","")) %>%
  select(-name, name_age_1yr = label)

variables_age_groups_mod <- variables_age_groups %>% 
  left_join(census_standard_age_groups, by="name_age_1yr") %>% drop_na(order_age_1yr)

# groups used for data tables
# name	description
# PCT12A	SEX BY SINGLE-YEAR AGE (WHITE ALONE)
# PCT12B	SEX BY SINGLE-YEAR AGE (BLACK OR AFRICAN AMERICAN ALONE)
# PCT12C	SEX BY SINGLE-YEAR AGE (AMERICAN INDIAN AND ALASKA NATIVE ALONE)
# PCT12D	SEX BY SINGLE-YEAR AGE (ASIAN ALONE)
# PCT12E	SEX BY SINGLE-YEAR AGE (NATIVE HAWAIIAN AND OTHER PACIFIC ISLANDER ALONE)
# PCT12F	SEX BY SINGLE-YEAR AGE (SOME OTHER RACE ALONE)
# PCT12G	SEX BY SINGLE-YEAR AGE (TWO OR MORE RACES)
# PCT12H	SEX BY SINGLE-YEAR AGE (HISPANIC OR LATINO)
# PCT12I	SEX BY SINGLE-YEAR AGE (WHITE ALONE, NOT HISPANIC OR LATINO)
# PCT12J	SEX BY SINGLE-YEAR AGE (BLACK OR AFRICAN AMERICAN ALONE, NOT HISPANIC OR LATINO)
# PCT12K	SEX BY SINGLE-YEAR AGE (AMERICAN INDIAN AND ALASKA NATIVE ALONE, NOT HISPANIC OR LATINO)
# PCT12L	SEX BY SINGLE-YEAR AGE (ASIAN ALONE, NOT HISPANIC OR LATINO)
# PCT12M	SEX BY SINGLE-YEAR AGE (NATIVE HAWAIIAN AND OTHER PACIFIC ISLANDER ALONE, NOT HISPANIC OR LATINO)
# PCT12N	SEX BY SINGLE-YEAR AGE (SOME OTHER RACE ALONE, NOT HISPANIC OR LATINO)
# PCT12O	SEX BY SINGLE-YEAR AGE (TWO OR MORE RACES, NOT HISPANIC OR LATINO)

# Download variables by census tract
grouplist <- c("PCT12H", "PCT12I", "PCT12J", "PCT12K", "PCT12L","PCT12M","PCT12N","PCT12O")

groupname <- c("Hispanic", "NH White", "NH Black", "NH AIAN", "NH Asian","NH NHPI","NH Other","NH Multiracial")

#groupname <- c("Hispanic", "Non-Hispanic White", "Non-Hispanic Black", "Non-Hispanic Native American or Alaskan Native", "Non-Hispanic Asian","Non-Hispanic Native Hawaiian or Other Pacific Islander","Non-Hispanic Other","Non-Hispanic Two or More Races")

yearlist <- c(2010)
for (agroup in grouplist) {
  for (ayear in yearlist) {
    agroupname = paste("group(",agroup,")",sep="")
    agroup_mod <- str_replace(agroup,"PCT","PCT0")
    census_group <- getCensus(name = "dec/sf1",
                           vintage = ayear,
                           vars = c(agroupname),
                           region = "tract:*", # tracts
                           regionin="state:17+county:031", # places, counties, not msas
                           key=key_get("census_api_key"))
    census_group <- census_group %>% 
      select(-ends_with("NA")) %>%
      mutate(census_group = agroup,
             vintage = ayear,
             source = "https://api.census.gov/data/2010/dec/sf1") %>%
      rename_with(~str_replace(.,agroup_mod,"age_"))
    assign(paste(agroup,"tract",ayear,sep="_"),census_group)
  }
}

apattern_tract <- paste("tract_2010")
alist_tract <- mget(ls(pattern = apattern_tract))
tract_age_sex_race_2010 <- bind_rows(alist_tract)
rm(list=ls(pattern=apattern_tract))

group_list <- as.data.frame(grouplist) %>% rename(census_group = 1)
group_category <- as.data.frame(groupname) %>% rename(race = 1)
group_categories <- bind_cols(group_list, group_category)

tract_age_sex_race_2010_attr <- tract_age_sex_race_2010 %>%
  select(-c(GEO_ID,NAME), -starts_with("age"), state, county, tract, vintage, source, census_group, source, starts_with("age")) %>% 
  left_join(group_categories, by = "census_group") %>%
  pivot_longer(cols=c(age_001:age_209), names_to = "age_sex", values_to = "population") %>%
  mutate(geoid_tract_2010 = paste0(state,county,tract),
         col_number = as.integer(substr(age_sex,5,7)),
         sex = case_when(col_number == 1 ~ "Total",
                   col_number > 2 & col_number <=105 ~ "Male",
                   col_number > 106 & col_number <=209 ~ "Female")) %>%
  left_join(variables_age_groups_mod, by="col_number") %>%
  filter(col_number >= 3, col_number != 106) %>%
  arrange(geoid_tract_2010,
          sex,
          race,
          col_number) %>%
  select(geoid_tract_2010, sex, race, name_age_1yr:order_age_10yr, population, vintage, source)

# add location, district attributes to table
tract_age_sex_race_2010_attr_locations <- tract_age_sex_race_2010_attr %>% 
  left_join(tracts_2010_cook_county, by="geoid_tract_2010") %>%
  drop_na(location)

# write table to csv for GitHub and inter-census SQL Server database
# if code returns odbc connection error, import csv table via SSMS gui
dbWriteTable(conn = con_inter_census, 
               Id(schema="ref", table="decennial-2010-single-year-age-sex-race-by-tract"), 
               overwrite= TRUE,
               tract_age_sex_race_2010_attr_locations)

write_csv(tract_age_sex_race_2010_attr_locations, "c:/users/christopher.smith/onedrive - cook county health/git_repos/justenvirons/ccdph-data-sets/2010/decennial-2010-single-year-age-sex-race-ethnicity-by-tract.csv")

```

