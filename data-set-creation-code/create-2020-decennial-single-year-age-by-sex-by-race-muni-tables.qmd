---
output: html_document
editor_options: 
  chunk_output_type: console
---

# activate required packages
```{r}
library(censusapi)
library(DBI)
library(odbc)
library(tigris) 
library(tidyverse)
library(tidyr)
library(dplyr) 
library(sf)
library(data.table)
library(keyring)
```

# connect to inter-census SQL Server databases
```{r}
con_inter_census <- dbConnect(odbc::odbc(),
                               Driver   = "SQL Server",
                               Server   = key_get("ccdph_sql_server"),
                               Database = "inter-census")

```

# create 2020 decennial census groups and variables tables
```{r}
# return all groups in census 2020 demographic and housing counts
groups_census_2020_dhc <- listCensusMetadata(
  name = "dec/dhc",
  vintage = 2020,
  type = "groups",
  group = NULL,
  variable_name = NULL,
  include_values = FALSE
)

# select all PCT12 (age, sex, race) groups
groups_age_sex_race <- groups_census_2020_dhc %>%
  select(name, description) %>%
  filter(str_detect(name, "PCT12")) %>%
  distinct() %>%
  arrange(name)

# return all variables in census 2020 demographic and housing counts
variables_census_2020_dhc <- listCensusMetadata(
  name = "dec/dhc",
  vintage = 2020,
  type = "variables",
  group = NULL,
  variable_name = NULL,
  include_values = FALSE
)

```

# create 2020 custom decennial groups and variables tables
```{r}
# select all PCT12 (age, sex) variables
variables_age_sex_race <- variables_census_2020_dhc %>%
  select(name, label) %>%
  filter(str_detect(name, "PCT12")) %>%
  distinct() %>%
  arrange(name)

variables_age_groups <- variables_age_sex_race %>%
  filter(str_detect(name, "PCT12_")) %>%
  mutate(col_number = as.integer(substr(name,7,9)),
         label = str_replace_all(label, " !!Total:","Total"),
         label = str_replace_all(label, "Total!!Male:!!",""),
         label = str_replace_all(label, "Total!!Female:!!",""),
         label = str_replace_all(label, "!!","")) %>%
  select(-name, age = label)

# read muni table from database
places_cook_county <- dbReadTable(conn = con_inter_census, 
               Id(schema="ref", table="decennial-2020-total-muni"))

# create list subset of partial munis
places_cook_county_partial_df <- as.list(places_cook_county %>% filter(partial=="TRUE" & pop_in_cook > 0) %>%  select(census_place_code))
places_cook_county_partial <- places_cook_county_partial_df$census_place_code

# groups used for data tables
# name	description
# PCT12A	SEX BY SINGLE-YEAR AGE (WHITE ALONE)
# PCT12B	SEX BY SINGLE-YEAR AGE (BLACK OR AFRICAN AMERICAN ALONE)
# PCT12C	SEX BY SINGLE-YEAR AGE (AMERICAN INDIAN AND ALASKA NATIVE ALONE)
# PCT12D	SEX BY SINGLE-YEAR AGE (ASIAN ALONE)
# PCT12E	SEX BY SINGLE-YEAR AGE (NATIVE HAWAIIAN AND OTHER PACIFIC ISLANDER ALONE)
# PCT12F	SEX BY SINGLE-YEAR AGE (SOME OTHER RACE ALONE)
# PCT12G	SEX BY SINGLE-YEAR AGE (TWO OR MORE RACES)
# PCT12H	SEX BY SINGLE-YEAR AGE (HISPANIC OR LATINO)
# PCT12I	SEX BY SINGLE-YEAR AGE (WHITE ALONE, NOT HISPANIC OR LATINO)
# PCT12J	SEX BY SINGLE-YEAR AGE (BLACK OR AFRICAN AMERICAN ALONE, NOT HISPANIC OR LATINO)
# PCT12K	SEX BY SINGLE-YEAR AGE (AMERICAN INDIAN AND ALASKA NATIVE ALONE, NOT HISPANIC OR LATINO)
# PCT12L	SEX BY SINGLE-YEAR AGE (ASIAN ALONE, NOT HISPANIC OR LATINO)
# PCT12M	SEX BY SINGLE-YEAR AGE (NATIVE HAWAIIAN AND OTHER PACIFIC ISLANDER ALONE, NOT HISPANIC OR LATINO)
# PCT12N	SEX BY SINGLE-YEAR AGE (SOME OTHER RACE ALONE, NOT HISPANIC OR LATINO)
# PCT12O	SEX BY SINGLE-YEAR AGE (TWO OR MORE RACES, NOT HISPANIC OR LATINO)
```

# Download variables for partial places (municipalities partially inside Cook County)
```{r}

grouplist <- c("PCT12H", "PCT12I", "PCT12J", "PCT12K", "PCT12L","PCT12M","PCT12N","PCT12O")
groupname <- c("Hispanic/Latino", "Non-Hispanic White", "Non-Hispanic Black", "Non-Hispanic Other", "Non-Hispanic Asian","Non-Hispanic Other","Non-Hispanic Other","Non-Hispanic Multiracial")
ayear = 2020

for (agroup in grouplist) {
  for (aplace_partial in  places_cook_county_partial){
      agroupname = paste("group(",agroup,")",sep="")
      aregionin = paste0("state:17+place:",aplace_partial)
      print(agroupname)
      print(aregionin)
      census_group <- getCensus(name = "dec/dhc",
                             vintage = ayear,
                             vars = c(agroupname),
                             region = "county (or part):031", # tracts
                             regionin=aregionin,
                             key=key_get("census_api_key"))
      census_group <- census_group %>% 
        select(-ends_with("NA")) %>%
        mutate(census_group = agroup,
               vintage = ayear,
               source = "https://api.census.gov/data/2020/dec/dhc") %>%
        rename_with(~str_replace(.,agroup,"age"))
      assign(paste(agroup,"place_partial",aplace_partial, ayear,sep="_"),census_group)
    }
  }

# bind partial muni tables
apattern <- paste("_place_partial_")
alist_pattern <- mget(ls(pattern = apattern))
munis_partial_single_age_sex_race_2020 <- bind_rows(alist_pattern)  %>%
  mutate(geoid_place = paste0(state,place)) %>%
  select(-c(county_or_part))

# remove partial muni tables from environment
rm(list=ls(pattern="_place_partial"))

```

# Download variables for total places (municipalities wholly inside Cook County)
```{r}

for (agroup in grouplist) {
      agroupname = paste("group(",agroup,")",sep="")
      census_group <- getCensus(name = "dec/dhc",
                             vintage = ayear,
                             vars = c(agroupname),
                             region = "place:*", 
                             regionin="state:17",
                             key=key_get("census_api_key"))
      census_group <- census_group %>% 
        select(-ends_with("NA")) %>%
        mutate(census_group = agroup,
               vintage = ayear,
               source = "https://api.census.gov/data/2020/dec/dhc") %>%
        rename_with(~str_replace(.,agroup,"age"))
      assign(paste(agroup,"places_all", ayear,sep="_"),census_group)
  }

# bind total other muni tables
apattern <- paste("_places_all_")
alist_pattern <- mget(ls(pattern = apattern))
munis_total_single_age_sex_race_2020 <- bind_rows(alist_pattern) %>%
  mutate(geoid_place = paste0(state,place)) %>%  
  right_join(places_cook_county %>% select(geoid_place), by="geoid_place") %>%
  anti_join(munis_partial_single_age_sex_race_2020, by="geoid_place")

# remove total muni tables from environment
rm(list=ls(pattern="_places_all_"))

```

# Bind partial and total municipal tables
```{r}
munis_single_age_sex_race_2020 <- munis_total_single_age_sex_race_2020 %>% bind_rows(munis_partial_single_age_sex_race_2020)

group_list <- as.data.frame(grouplist) %>% rename(census_group = 1)
group_category <- as.data.frame(groupname) %>% rename(race = 1)
group_categories <- bind_cols(group_list, group_category)

munis_single_age_sex_race_2020_attr <- munis_single_age_sex_race_2020 %>%
  left_join(group_categories, by = "census_group") %>%
  pivot_longer(cols=c(age_001N:age_209N), names_to = "age_sex", values_to = "population") %>%
  mutate(col_number = as.integer(substr(age_sex,5,7)),
         sex = case_when(col_number == 1 ~ "Total",
                   col_number > 2 & col_number <=105 ~ "Male",
                   col_number > 106 & col_number <=209 ~ "Female")) %>%
  left_join(variables_age_groups, by="col_number") %>%
  filter(col_number >= 3, col_number != 106) %>%
  group_by(geoid_place, sex, race, age, vintage, source, col_number) %>%
  summarise(population = sum(population)) %>%
  arrange(geoid_place,
          sex,
          race,
          col_number) %>%
  left_join(places_cook_county %>% select(name_place, geoid_place, census_place_code, name_district, location, partial, exclude_from_analysis), by="geoid_place") %>%
  select(name_place, geoid_place, census_place_code, sex:age, population,vintage, source, name_district:exclude_from_analysis)
```

# write table inter-census SQL Server database
```{r}
dbWriteTable(conn = con_inter_census, 
               Id(schema="ref", table="decennial-2020-single-year-age--sex-race-by-muni"), 
               overwrite= TRUE,
               munis_single_age_sex_race_2020_attr)

```

